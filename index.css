/* CSS: Cascading Style Sheets                                                                                  */
/*    Каскадные таблицы стилей                                                                                  */
/* язык иерархических правил (таблиц стилей)                                                                    */
/* используемый для представления внешнего вида документа, написанного на HTML.                                 */

/* CSS - отвечает за стилизацию веб-страниц:                                                                    */
/* Цвета, Шрифты, Расположение элементов,                                                                       */
/* Анимации и другие визуальные эффекты.                                                                        */

/* ------------------------------------------------                                                             */

/* Анатомия набора правил CSS                                                                                   */

/* selector */
/*    p    {                                                                                                    */
/*             color:   red ;                                                                                   */
/*            |_____|   |_|                                                                                     */
/*            Property  Property value                                                                          */
/*            Свойство  Свойство значение                                                                       */

/* ------------------------------------------------                                                             */

/* Есть много видов селекторов, основные из них это:                                                            */

/* 1. Селектор элемента - p выбирает <p>                                                                        */
/* 2. ID селектор - #my-id выбирает <p id="my-id">                                                              */
/* 3. Селектор класса - .my-class выбирает <p class="my-class">                                                 */
/* 4. Селектор атрибута - img[src] выбирает <img src="myimg.png"> но не img                                     */
/* 5. Селектор псевдокласса - a:hover выбирает <a>, только при наведении                                        */
/* 6. Селектор псевдоэлемента - p::after добавляет контент после <p>                                            */
/* 7. Комбинаторы - p > span (выбирает span только внутри p) и p + span (выбирает span сразу после p)           */

/* ------------------------------------------------                                                             */

/* Шрифты и текст:                                                                                              */
/* font-family: определяет набор шрифтов, которые можно использовать                                            */
/* font-size: задаёт размер текста, например, в px, em или rem                                                  */
/* line-height: регулирует расстояние между строками текста                                                     */
/* font-weight: определяет толщину шрифта (normal, bold, 100–900)                                               */
/* text-align: выравнивание текста (left, center, right, justify)                                               */
/* text-transform: преобразование текста (uppercase, lowercase, capitalize)                                     */

/* Пример подключения Google Fonts:                                                                             */
/* В <head> вашего HTML-документа добавьте:                                                                     */
/* <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">     */

/* CSS - основан на блочной модели (box-model).                                                                 */
/* Каждый из блоков, занимающий пространство на вашей странице, имеет такие свойства как:                       */
/* content - это сам контент (текст или изображение)                                                            */
/* padding - пространство только вокруг контента                                                                */
/* border - граница вокруг padding                                                                              */
/* margin - пространство вокруг внешней стороны элемента                                                        */

/*       ----------------------------------------------------------                                             */
/*       |                                                        |                                             */
/*       |                                           margin       |                                             */
/*       |     ----------------------------border------------     |                                             */
/*       |     |                                            |     |                                             */
/*       |     |                                            |     |                                             */
/*       |     |                           padding          |     |                                             */
/*       |     |                                            |     |                                             */
/*       |     |      lorem ipsum dolor amet...             |     |                                             */
/*       |     |                                            |     |                                             */
/*       |     ----------------------------------------------     |                                             */
/*       |                                                        |                                             */
/*       |                                                        |                                             */
/*       ----------------------------------------------------------                                             */

/* width - ширина элемента                                                                                      */
/* background-color - цвет позади контента                                                                      */
/* color - цвет текста                                                                                          */
/* text-shadow - устанавливает тень для текста                                                                  */
/* display - устанавливает способ отображения (block, inline, flex, grid и др.)                                 */
/* visibility - контролирует видимость (visible, hidden)                                                        */

/* Пример центрирования элемента:                                                                               */
/* img {                                                                                                        */
/*      display: block;                                                                                         */
/*      margin: 0 auto;                                                                                         */
/* }                                                                                                            */

/* ------------------------------------------------                                                             */

/* Свойство position определяет способ позиционирования элементов:                                              */
/* 1. static - (по умолчанию) элемент остаётся в нормальном потоке документа                                    */
/* 2. relative - позиционируется относительно собственного нормального положения (top, right, bottom, left)     */
/* 3. absolute - позиционируется относительно ближайшего родительского элемента с position, отличным от static  */
/* 4. fixed - позиционируется относительно окна браузера и не двигается при прокрутке                           */
/* 5. sticky - комбинирует relative и fixed (позиция становится фиксированной при скролле)                      */

/* ------------------------------------------------                                                             */

/* Уровни элементов: z-index                                                                                    */
/* z-index управляет наложением элементов на оси Z (вперёд/назад).                                              */
/* Элемент с большим z-index будет отображаться поверх элементов с меньшим значением z-index.                   */

/* ------------------------------------------------                                                             */

/* Переполнение (overflow):                                                                                     */
/* overflow: visible; - контент виден за границами блока (по умолчанию)                                         */
/* overflow: hidden; - скрывает контент, выходящий за границы блока                                             */
/* overflow: scroll; - всегда показывает полосы прокрутки                                                       */
/* overflow: auto; - добавляет полосы прокрутки только при необходимости                                        */

/* ------------------------------------------------                                                             */

/* Плавающие элементы (float):                                                                                  */
/* float: left; - элемент выравнивается слева                                                                   */
/* float: right; - элемент выравнивается справа                                                                 */
/* clear: both; - используется для предотвращения обтекания плавающих элементов                                 */
/* Примечание: float устарел и редко используется в современных проектах                                        */

/* ------------------------------------------------                                                             */

/* Современные альтернативы: flexbox и grid для создания сложных макетов.                                       */

/* ------------------------------------------------                                                             */

/* Flexbox и Grid Layout:                                                                                       */
/* Flexbox: Используется для выравнивания и распределения элементов в одном направлении.                        */
/* Grid Layout: Для построения сложных макетов на сетке с рядами и колонками.                                   */

/* ------------------------------------------------                                                             */

/* Анимации:                                                                                                    */
/* Используйте keyframes для создания анимаций.                                                                */
/* Пример:                                                                                                      */
/* @keyframes fade-in {                                                                                         */
/*     from { opacity: 0; }                                                                                     */
/*     to { opacity: 1; }                                                                                       */
/* }                                                                                                            */
/* div {                                                                                                        */
/*     animation: fade-in 1s ease-in;                                                                           */
/* }                                                                                                            */

/* ------------------------------------------------                                                             */

/* Медиа запросы (Media Queries):                                                                               */
/* Позволяют адаптировать стили под разные устройства.                                                          */
/* Пример:                                                                                                      */
/* @media (max-width: 600px) {                                                                                  */
/*     body { background-color: lightgray; }                                                                    */
/* }                                                                                                            */

/* ------------------------------------------------                                                             */

/* Переменные CSS:                                                                                              */
/* Используются для удобства работы с повторяющимися значениями.                                                */
/* Пример:                                                                                                      */
/* :root {                                                                                                      */
/*     --main-color: #3498db;                                                                                   */
/* }                                                                                                            */
/* h1 { color: var(--main-color); }                                                                             */

/* ------------------------------------------------                                                             */

/* Псевдоэлементы:                                                                                              */
/* Используются для добавления декоративного контента без изменения HTML.                                       */
/* Пример:                                                                                                      */
/* h1::after {                                                                                                  */
/*     content: '*';                                                                                            */
/*     color: red;                                                                                              */
/* }                                                                                                            */

/* ------------------------------------------------                                                             */

/* Управление тенями:                                                                                           */
/* Используйте text-shadow для текста и box-shadow для блоков.                                                  */
/* Пример:                                                                                                      */
/* button {                                                                                                     */
/*     box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.2);                                                              */
/* }                                                                                                            */

/* ------------------------------------------------                                                             */

/* Трансформации (transform):                                                                                   */
/* Используются для изменения положения, размера и других свойств элемента.                                     */
/* Пример:                                                                                                      */
/* button:hover {                                                                                               */
/*     transform: scale(1.1);                                                                                   */
/* }                                                                                                            */

/* ------------------------------------------------                                                             */

/* Переходы (transition):                                                                                       */
/* Делают изменения свойств плавными.                                                                           */
/* Пример:                                                                                                      */
/* button {                                                                                                     */
/*     transition: background-color 0.3s ease;                                                                  */
/* }                                                                                                            */
/* button:hover {                                                                                               */
/*     background-color: #2ecc71;                                                                               */
/* }                                                                                                            */

/* ------------------------------------------------                                                             */
